.elhoo_body_canvas {
    width: 95% !important;
    height: auto !important;
}

.elhoo_body_TableauBord-result_filter {
    text-align: center;
    background: var(--primary_color);
    box-shadow: 5.9px 6.8px 15.5px rgba(137, 148, 169, 0.28), -2.8px -2.8px 8px white, inset 3.5px 3.5px 6px rgba(255, 255, 255, 0.15);
    border-radius: 10px;
    border-width: 1px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    p {
        margin: 0;
        letter-spacing: 0px;
        font-size: 16px;
        padding-top: 30px;
        font-size: 18px;
    }
    h1 {
        font-size: 32px;
        padding-top: 20px;
    }
}

a {
    &:hover {
        svg {
            g,
            rect {
                fill: var(--secondary_color);
            }
            path {
                fill: var(--secondary_color);
            }
        }
    }
}

.image-wrapper {
    width: 90%;
}

.image-wrapper img {
    position: absolute;
    top: 3%;
    transform-origin: center;
    width: 90%;
}

.image-1 {
    clip-path: polygon(0 0, 0 32%, 28% 0);
    transform: translate(-10px, -10px);
    transition: transform 300ms ease;
    transform-origin: top;
    .image-wrapper:hover & {
        transform: translate(0, 0);
    }
}

.image-2 {
    clip-path: polygon(28% 0, 0 32%, 0 100%, 17% 100%, 90% 0);
    transform: translate(-30px, 5px);
    transition: transform 300ms ease;
    .image-wrapper:hover & {
        transform: translate(0, 0);
    }
}

.image-3 {
    clip-path: polygon(100% 0, 100% 65%, 74% 100%, 17% 100%, 90% 0);
    transform: translate(-15px, -10px);
    transition: transform 300ms ease;
    .image-wrapper:hover & {
        transform: translate(0, 0);
    }
}

.image-4 {
    clip-path: polygon(100% 65%, 74% 100%, 100% 100%);
    transform: translate(-32px, 5px);
    transition: transform 300ms ease;
    transform-origin: top;
    .image-wrapper:hover & {
        transform: translate(0, 0);
    }
}

span {
    color: var(--secondary_color);
}

p {
    margin: 0;
}

.borderDark {
    border-style: dashed;
    align-items: center;
    height: 100px;
    border-width: 2px;
    border-color: var(--dark_color);
}

.borderSecondary {
    border-style: dashed;
    align-items: center;
    height: 100px;
    border-width: 2px;
    border-color: var(--secondary_color);
}

.hoverSvg {
    &:hover {
        svg {
            path {
                fill: var(--secondary_color);
            }
        }
        a {
            color: var(--secondary_color);
        }
    }
}